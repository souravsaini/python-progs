#!/usr/bin/python

from sklearn import tree

features=[
#'ADULT'+'STRETCH' data
['YELLOW','SMALL','STRETCH','ADULT','T'],
['YELLOW','SMALL,''STRETCH','ADULT','T'],
['YELLOW','SMALL','STRETCH','CHILD','F'],
['YELLOW','SMALL','DIP','ADULT','F'],
['YELLOW','SMALL','DIP','CHILD','F'],
['YELLOW','LARGE','STRETCH','ADULT','T'],
['YELLOW','LARGE','STRETCH','ADULT','T'],
['YELLOW','LARGE','STRETCH','CHILD','F'],
['YELLOW','LARGE','DIP','ADULT','F'],
['YELLOW','LARGE','DIP','CHILD','F'],
['PURPLE','SMALL','STRETCH','ADULT','T'],
['PURPLE','SMALL','STRETCH','ADULT','T'],
['PURPLE','SMALL','STRETCH','CHILD','F'],
['PURPLE','SMALL','DIP','ADULT','F'],
['PURPLE','SMALL','DIP','CHILD','F'],
['PURPLE','LARGE','STRETCH','ADULT','T'],
['PURPLE','LARGE','STRETCH','ADULT','T'],
['PURPLE','LARGE','STRETCH','CHILD','F'],
['PURPLE','LARGE','DIP','ADULT','F'],
['PURPLE','LARGE','DIP','CHILD','F'],
#'ADULT'-'STRETCH' data
['YELLOW','SMALL','STRETCH','ADULT','T'],
['YELLOW','SMALL','STRETCH','CHILD','T'],
['YELLOW','SMALL','DIP','ADULT','T'],
['YELLOW','SMALL','DIP','CHILD','F'],
['YELLOW','SMALL','DIP','CHILD','F'],
['YELLOW','LARGE','STRETCH','ADULT','T'],
['YELLOW','LARGE','STRETCH','CHILD','T'],
['YELLOW','LARGE','DIP','ADULT','T'],
['YELLOW','LARGE','DIP','CHILD','F'],
['YELLOW','LARGE','DIP','CHILD','F'],
['PURPLE','SMALL','STRETCH','ADULT','T'],
['PURPLE','SMALL','STRETCH','CHILD','T'],
['PURPLE','SMALL','DIP','ADULT','T'],
['PURPLE','SMALL','DIP','CHILD','F'],
['PURPLE','SMALL','DIP','CHILD','F'],
['PURPLE','LARGE','STRETCH','ADULT','T'],
['PURPLE','LARGE','STRETCH','CHILD','T'],
['PURPLE','LARGE','DIP','ADULT','T'],
['PURPLE','LARGE','DIP','CHILD','F'],
['PURPLE','LARGE','DIP','CHILD','F'],
#'YELLOW'-'SMALL' data
['YELLOW','SMALL','STRETCH','ADULT','T'],
['YELLOW','SMALL','STRETCH','CHILD','T'],
['YELLOW','SMALL','DIP','ADULT','T'],
['YELLOW','SMALL','DIP','CHILD','T'],
['YELLOW','SMALL','STRETCH','ADULT','T'],
['YELLOW','SMALL','STRETCH','CHILD','T'],
['YELLOW','SMALL','DIP','ADULT','T'],
['YELLOW','SMALL','DIP','CHILD','T'],
['YELLOW','LARGE','STRETCH','ADULT','F'],
['YELLOW','LARGE','STRETCH','CHILD','F'],
['YELLOW','LARGE','DIP','ADULT','F'],
['YELLOW','LARGE','DIP','CHILD','F'],
['PURPLE','SMALL','STRETCH','ADULT','F'],
['PURPLE','SMALL','STRETCH','CHILD','F'],
['PURPLE','SMALL','DIP','ADULT','F'],
['PURPLE','SMALL','DIP','CHILD','F'],
['PURPLE','LARGE','STRETCH','ADULT','F'],
['PURPLE','LARGE','STRETCH','CHILD','F'],
['PURPLE','LARGE','DIP','ADULT','F'],
['PURPLE','LARGE','DIP','CHILD','F'],
#'YELLOW'-'SMALL'+'STRETCH' data
['YELLOW','SMALL','STRETCH','ADULT','T'],
['YELLOW','SMALL','STRETCH','CHILD','T'],
['YELLOW','SMALL','DIP','ADULT','T'],
['YELLOW','SMALL','DIP','CHILD','T'],
['YELLOW','LARGE','STRETCH','ADULT','T'],
['YELLOW','LARGE','STRETCH','CHILD','F'],
['YELLOW','LARGE','DIP','ADULT','F'],
['YELLOW','LARGE','DIP','CHILD','F'],
['PURPLE','SMALL','STRETCH','ADULT','T'],
['PURPLE','SMALL','STRETCH','CHILD','F'],
['PURPLE','SMALL','DIP','ADULT','F'],
['PURPLE','SMALL','DIP','CHILD','F'],
['PURPLE','LARGE','STRETCH','ADULT','T'],
['PURPLE','LARGE','STRETCH','CHILD','F'],
['PURPLE','LARGE','DIP','ADULT','F'],
['PURPLE','LARGE','DIP','CHILD','F']
]

targets=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]

#make classifier
dtree=tree.DecisionTreeClassifier()
dtree.fit(features,targets)

#Predict data
print(dtree.predict([['YELLOW','LARGE','STRETCH','CHILD','F']]))
